<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <LinearGradientBrush x:Key="InnerBorder" StartPoint="0,0" EndPoint="1,0">
    	<LinearGradientBrush.RelativeTransform>
    		<TransformGroup>    			
    			<RotateTransform Angle="45" CenterY="0.5" CenterX="0.5"/>    			
    		</TransformGroup>
    	</LinearGradientBrush.RelativeTransform>
        <GradientStop Color="#80000000" Offset="0" />
        <GradientStop Color="#80000000" Offset="0.48" />
        <GradientStop Color="#80FFFFFF" Offset="0.52" />
        <GradientStop Color="#80FFFFFF" Offset="1" />        
    </LinearGradientBrush>

    <Style x:Key="MainMenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel  Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
       
        <Setter Property="Margin" Value="0,20,0,0"/>           
        <Setter Property="SnapsToDevicePixels" Value="True" />                
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">                    
                    <Border Background="#FF606060"  CornerRadius="5" BorderBrush="{DynamicResource InnerBorder}" BorderThickness="1" ClipToBounds="True">
                            <ItemsPresenter ClipToBounds="True" />
                        </Border>                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DropShadowBitmapEffect x:Key="PopupDropShadow" ShadowDepth="1.5" Softness="0.15" />
    
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
       
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HighlightedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HightlightedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverShineBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="IsCheckedBorder"     Background="#40000000" Visibility="Hidden"                CornerRadius="1"/>
                        <Border x:Name="HoverBorder"        Background="{DynamicResource HoverBrush}"      Opacity="0" CornerRadius="1"/>
                        <Border x:Name="HoverShineBorder"   Background="{DynamicResource HoverShineBrush}" Opacity="0" CornerRadius="1"/>     
                        
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Margin="3,2,3,2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition Width="14" />
                            </Grid.ColumnDefinitions>                                                       
                            <ContentPresenter Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon" />
                            
                            <ContentPresenter Grid.Column="1" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header" Margin="2,1,2,1" />
                                                        
                            <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                <Path VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z" />
                            </Grid>
                            
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                   Placement="Right" 
                                   x:Name="SubMenuPopup" 
                                   Focusable="false" 
                                   AllowsTransparency="true" 
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Grid x:Name="SubMenu">
                                    <Border x:Name="SubMenuBorder" Background="{DynamicResource LightBrush}" BorderThickness="1" Opacity="0.8">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                        </Border.BorderBrush>
                                    </Border>
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                    </Grid>
                        <ControlTemplate.Triggers>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                            <Setter Property="Margin" Value="8,7,8,7" TargetName="Border" />
                            <Setter Property="CornerRadius" Value="5" TargetName="IsCheckedBorder" />
                            <Setter Property="CornerRadius" Value="5" TargetName="HoverBorder" />
                            <Setter Property="CornerRadius" Value="5" TargetName="HoverShineBorder" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontSize" Value="15"/>                            
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            <Setter Property="Margin" Value="8,7,8,7" TargetName="Border" />
                            <Setter Property="CornerRadius" Value="5" TargetName="IsCheckedBorder" />
                            <Setter Property="CornerRadius" Value="5" TargetName="HoverBorder" />
                            <Setter Property="CornerRadius" Value="5" TargetName="HoverShineBorder" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="FontSize" Value="15"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                            <Setter Property="DockPanel.Dock" Value="Top" />                            
                            <Setter Property="Padding" Value="0,2,0,2" />                                                        
                            <Setter Property="FontSize" Value="12"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            <Setter Property="DockPanel.Dock" Value="Top" />                            
                            <Setter Property="Padding" Value="0,2,0,2" />                                                        
                            <Setter Property="FontSize" Value="12"/>
                        </Trigger>
                        
                        
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup" />
                        </Trigger>                        
                        
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="IsCheckedBorder" />                            
                        </Trigger>
                        
                        <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                            <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu" />
                            <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu" />
                            <Setter Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder" />
                        </Trigger>
                                 
                        <Trigger Property="IsHighlighted" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HightlightedOff}" x:Name="HightlightedOff_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HighlightedOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                                                
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>        

</ResourceDictionary>